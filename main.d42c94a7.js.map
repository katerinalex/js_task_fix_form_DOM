{"version":3,"sources":["scripts/main.js"],"names":["listNodeInput","document","querySelectorAll","inputs","listNodeField","fields","count","input","newLabel","createElement","atribClass","createAttribute","atribFor","inputName","getAttribute","inputNameStyle","temporary","value","setAttributeNode","i","length","toUpperCase","textContent","append","atribPlaceholder","slice"],"mappings":";AAAA,aA4CC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA1CD,IA0CC,EA1CKA,EAAgBC,SAASC,iBAAiB,SAC1CC,EAAaH,EAAAA,GACbI,EAAgBH,SAASC,iBAAiB,UAC1CG,EAAaD,EAAAA,GACfE,EAAQ,EAEQH,EAAAA,EAAAA,GAoCnB,IApC2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBI,IAAAA,EAAiB,EAAA,MACpBC,EAAWP,SAASQ,cAAc,SAClCC,EAAaT,SAASU,gBAAgB,SACtCC,EAAWX,SAASU,gBAAgB,OACtCE,EAAYN,EAAMO,aAAa,QAC/BC,EAAiB,GACjBC,EAAY,GAEhBN,EAAWO,MAAQ,cACnBL,EAASK,MAAQV,EAAMO,aAAa,MAEpCN,EAASU,iBAAiBR,GAC1BF,EAASU,iBAAiBN,GAErB,IAAA,IAAIO,EAAI,EAAGA,EAAIN,EAAUO,OAAQD,IAChCN,EAAUM,KAAON,EAAUM,GAAGE,cAChCL,GAAa,IAAMH,EAAUM,GAE7BH,GAAaH,EAAUM,GAI3BN,EAAYG,EAEZR,EAASc,YAAcT,EAAUQ,cAEjChB,EAAOC,GAAOiB,OAAOf,GACrBF,IAEMkB,IAAAA,EAAmBvB,SAASU,gBAAgB,eAElDI,EAAiBF,EAAUY,MAAM,EAAG,GAAGJ,cACvCN,GAAkBF,EAAUY,MAAM,EAAGZ,EAAUO,QAE/CI,EAAiBP,MAAQF,EACzBR,EAAMW,iBAAiBM,IACxB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.d42c94a7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listNodeInput = document.querySelectorAll('input');\nconst inputs = [...listNodeInput];\nconst listNodeField = document.querySelectorAll('.field');\nconst fields = [...listNodeField];\nlet count = 0;\n\nfor (const input of inputs) {\n  const newLabel = document.createElement('label');\n  const atribClass = document.createAttribute('class');\n  const atribFor = document.createAttribute('for');\n  let inputName = input.getAttribute('name');\n  let inputNameStyle = '';\n  let temporary = '';\n\n  atribClass.value = 'field-label';\n  atribFor.value = input.getAttribute('id');\n\n  newLabel.setAttributeNode(atribClass);\n  newLabel.setAttributeNode(atribFor);\n\n  for (let i = 0; i < inputName.length; i++) {\n    if (inputName[i] === inputName[i].toUpperCase()) {\n      temporary += ' ' + inputName[i];\n    } else {\n      temporary += inputName[i];\n    }\n  }\n\n  inputName = temporary;\n\n  newLabel.textContent = inputName.toUpperCase();\n\n  fields[count].append(newLabel);\n  count++;\n\n  const atribPlaceholder = document.createAttribute('placeholder');\n\n  inputNameStyle = inputName.slice(0, 1).toUpperCase();\n  inputNameStyle += inputName.slice(1, inputName.length);\n\n  atribPlaceholder.value = inputNameStyle;\n  input.setAttributeNode(atribPlaceholder);\n}\n"]}